// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PokemonGame;

#nullable disable

namespace Pokemon.Migrations
{
    [DbContext(typeof(PokemonContext))]
    [Migration("20220518104051_V2Database")]
    partial class V2Database
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("PokemonGame.Ball", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double>("Chance")
                        .HasColumnType("REAL");

                    b.Property<int>("Counter")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Balls");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Ball");
                });

            modelBuilder.Entity("PokemonGame.Pokemon", b =>
                {
                    b.Property<int>("PokemonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Atk")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EvolutionLimit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(100);

                    b.Property<int>("Exp")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HP")
                        .HasColumnType("INTEGER");

                    b.Property<int>("HasEvolved")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(0);

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Skill")
                        .HasColumnType("TEXT");

                    b.HasKey("PokemonId");

                    b.ToTable("Pokemons");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Pokemon");
                });

            modelBuilder.Entity("PokemonGame.Charmander", b =>
                {
                    b.HasBaseType("PokemonGame.Pokemon");

                    b.HasDiscriminator().HasValue("Charmander");
                });

            modelBuilder.Entity("PokemonGame.Eevee", b =>
                {
                    b.HasBaseType("PokemonGame.Pokemon");

                    b.HasDiscriminator().HasValue("Eevee");
                });

            modelBuilder.Entity("PokemonGame.Pikachu", b =>
                {
                    b.HasBaseType("PokemonGame.Pokemon");

                    b.HasDiscriminator().HasValue("Pikachu");
                });

            modelBuilder.Entity("PokemonGame.Pokeball", b =>
                {
                    b.HasBaseType("PokemonGame.Ball");

                    b.HasDiscriminator().HasValue("Pokeball");
                });

            modelBuilder.Entity("PokemonGame.Test", b =>
                {
                    b.HasBaseType("PokemonGame.Pokemon");

                    b.HasDiscriminator().HasValue("Test");
                });

            modelBuilder.Entity("PokemonGame.Yuuki", b =>
                {
                    b.HasBaseType("PokemonGame.Pokemon");

                    b.HasDiscriminator().HasValue("Yuuki");
                });
#pragma warning restore 612, 618
        }
    }
}
